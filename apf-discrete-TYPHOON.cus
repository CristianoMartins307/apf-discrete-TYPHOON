<ui_settings>
    <version>2.8</version>
    <model_locked>False</model_locked>
    <canvas_bg_color>#ffffff</canvas_bg_color>
    <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts.
# NOTE: This code is always executed prior to simulation start.

# The variable 'SETTINGS_DIR' holds the directory where the loaded Panel .cus file is located.
# Also you can call the 'get_settings_dir_path()' function in any
# Macro and Expression script to get the same directory.
SETTINGS_DIR = get_settings_dir_path()

# The 'add_to_python_path(folder)' function can be used to add a custom folder
# with Python files and packages to the PYTHONPATH. After a folder is added, all Python
# files and Python packages from it can be imported into the SCADA Namespace.

# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# Numpy module is imported as 'np'
# Scipy module is imported as 'sp'
# Schematic Editor model namespace is imported as 'scm'
# Function for printing to the HIL SCADA Message log is imported as 'printf'.

]]></initialization_code>
    <components>
        <component_data>
                <id>39c02d95a75111efb667d45d64b809dd</id>
                <name><![CDATA[Capture/Scope]]></name>
                <type>Capture/Scope</type>
                <description><![CDATA[]]></description>
                <working_mode>windowed</working_mode>
                <widget_settings>
                    <x>952</x>
                    <y>456</y>
                    <width>120</width>
                    <height>120</height>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                    <appearance><![CDATA[Flat]]></appearance>
                    <state>Capture</state>
                    <layout>None</layout>
                    <virtual_signals_definitions>
                    </virtual_signals_definitions>
                    <presets>
                        <active_capture_preset><![CDATA[Default]]></active_capture_preset>
                        <active_scope_preset><![CDATA[Default]]></active_scope_preset>
                        <capture name="Default">
                            <time_interval>0.16</time_interval>
                            <sample_rate>500000.0</sample_rate>
                            <background_color>white</background_color>
                            <layout>Vertical</layout>
                            <legend>True</legend>
                            <analog_signals>
                                <analog>
                                    <channel>0</channel>
                                    <name><![CDATA[IA_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>0</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>1</channel>
                                    <name><![CDATA[Grid_SubSystem.Va_Fundamental]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>1</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>2</channel>
                                    <name><![CDATA[Grid_SubSystem.Vb_Fundamental]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>2</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>3</channel>
                                    <name><![CDATA[Grid_SubSystem.Vc_Fundamental]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>3</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>4</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>4</row>
                                    <viewports>
                                        <num_viewport>4</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>5</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>5</row>
                                    <viewports>
                                        <num_viewport>4</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>6</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>6</row>
                                    <viewports>
                                        <num_viewport>4</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>7</channel>
                                    <name><![CDATA[ref_I_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>7</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>8</channel>
                                    <name><![CDATA[ref_I_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>8</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>9</channel>
                                    <name><![CDATA[ref_I_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>9</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>10</channel>
                                    <name><![CDATA[ref_V_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>10</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>11</channel>
                                    <name><![CDATA[ref_V_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>11</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>12</channel>
                                    <name><![CDATA[ref_V_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>12</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>13</channel>
                                    <name><![CDATA[VA_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>13</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>14</channel>
                                    <name><![CDATA[VB_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>14</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>15</channel>
                                    <name><![CDATA[VC_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>15</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>16</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>16</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>17</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>17</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>18</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>18</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>19</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>19</row>
                                    <viewports>
                                        <num_viewport>3</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>20</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>20</row>
                                    <viewports>
                                        <num_viewport>3</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>21</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>21</row>
                                    <viewports>
                                        <num_viewport>3</num_viewport>
                                   </viewports>
                               </analog>
                            </analog_signals>
                            <digital_signals>
                            </digital_signals>
                            <virtual_signals>
                            </virtual_signals>
                            <trigger>
                                <device>0</device>
                                <is_force>True</is_force>
                                <type>Analog</type>
                                <source><![CDATA[Grid_SubSystem.Va_Fundamental]]></source>
                                <edge>Rising edge</edge>
                                <treshold>0.0</treshold>
                                <offset>0.0</offset>
                                <useFirstTrigger>False</useFirstTrigger>
                            </trigger>
                            <plotting_options in_use="False">
                                <subplots>
                                    </subplots>
                            </plotting_options>
                        </capture>
                        <scope name="Default">
                            <background_color>black</background_color>
                            <layout>Grid</layout>
                            <legend>True</legend>
                            <show_viewports>1</show_viewports>
                            <decimation>3</decimation>
                            <time_base>0.005</time_base>
                            <analog_signals>
                                <analog>
                                    <channel>0</channel>
                                    <name><![CDATA[IA_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>0</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>1</channel>
                                    <name><![CDATA[IB_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>1</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>2</channel>
                                    <name><![CDATA[IC_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>2</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>3</channel>
                                    <name><![CDATA[Grid_SubSystem.V_Grid_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>3</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>4</channel>
                                    <name><![CDATA[Grid_SubSystem.V_Grid_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>4</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>5</channel>
                                    <name><![CDATA[Grid_SubSystem.V_Grid_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>5</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>6</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>6</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>7</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>7</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>8</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>8</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>9</channel>
                                    <name><![CDATA[Gc_shunt_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>9</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>10</channel>
                                    <name><![CDATA[ref_I_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>10</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>11</channel>
                                    <name><![CDATA[Gc_shunt_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>12</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>12</channel>
                                    <name><![CDATA[ref_I_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>11</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>13</channel>
                                    <name><![CDATA[Gc_shunt_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>14</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>14</channel>
                                    <name><![CDATA[ref_I_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>13</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>15</channel>
                                    <name><![CDATA[VA_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>15</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>16</channel>
                                    <name><![CDATA[VB_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>16</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>17</channel>
                                    <name><![CDATA[VC_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>17</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>18</channel>
                                    <name><![CDATA[Ic_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>18</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>19</channel>
                                    <name><![CDATA[ref_V_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>19</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>20</channel>
                                    <name><![CDATA[ref_V_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>20</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>21</channel>
                                    <name><![CDATA[ref_V_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>21</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>22</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>22</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>23</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>23</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>24</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>24</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>25</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>25</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>26</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>26</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>27</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>27</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            </analog_signals>
                            <digital_signals>
                            </digital_signals>
                            <trigger>
                                <device>0</device>
                                <is_force>False</is_force>
                                <type>Analog</type>
                                <source>Grid_SubSystem.V_Grid_A</source>
                                <edge>Rising edge</edge>
                                <treshold>0.0</treshold>
                                <offset>50.0</offset>
                                <useFirstTrigger>False</useFirstTrigger>
                            </trigger>
                        </scope>
                        </presets>
                    <capture>
                        <time_interval>0.16</time_interval>
                        <sample_rate>500000.0</sample_rate>
                        <background_color>white</background_color>
                        <layout>Vertical</layout>
                        <legend>True</legend>
                        <trigger>
                            <type>Analog</type>
                            <source>Grid_SubSystem.Va_Fundamental</source>
                            <edge>Rising edge</edge>
                            <treshold>0.0</treshold>
                            <offset>0.0</offset>
                            <useFirstTrigger>False</useFirstTrigger>
                        </trigger>
                        <analog_signals>
                            <analog>
                                    <channel>0</channel>
                                    <name><![CDATA[IA_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>0</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>1</channel>
                                    <name><![CDATA[Grid_SubSystem.Va_Fundamental]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>1</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>2</channel>
                                    <name><![CDATA[Grid_SubSystem.Vb_Fundamental]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>2</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>3</channel>
                                    <name><![CDATA[Grid_SubSystem.Vc_Fundamental]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>3</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>4</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>4</row>
                                    <viewports>
                                        <num_viewport>4</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>5</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>5</row>
                                    <viewports>
                                        <num_viewport>4</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>6</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>6</row>
                                    <viewports>
                                        <num_viewport>4</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>7</channel>
                                    <name><![CDATA[ref_I_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>7</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>8</channel>
                                    <name><![CDATA[ref_I_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>8</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>9</channel>
                                    <name><![CDATA[ref_I_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>9</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>10</channel>
                                    <name><![CDATA[ref_V_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>10</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>11</channel>
                                    <name><![CDATA[ref_V_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>11</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>12</channel>
                                    <name><![CDATA[ref_V_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>12</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>13</channel>
                                    <name><![CDATA[VA_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>13</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>14</channel>
                                    <name><![CDATA[VB_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>14</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>15</channel>
                                    <name><![CDATA[VC_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>15</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>16</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>16</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>17</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>17</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>18</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>18</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>19</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>19</row>
                                    <viewports>
                                        <num_viewport>3</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>20</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>20</row>
                                    <viewports>
                                        <num_viewport>3</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>21</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>21</row>
                                    <viewports>
                                        <num_viewport>3</num_viewport>
                                   </viewports>
                               </analog>
                        </analog_signals>
                         <digital_signals>
                         </digital_signals>
                    </capture>
                    <scope>
                        <time_base>0.005 </time_base>
                        <background_color>black</background_color>
                        <layout>Grid</layout>
                        <legend>True</legend>
                        <trigger>
                            <mode>Auto</mode>
                            <type>Analog</type>
                            <source>Grid_SubSystem.V_Grid_A</source>
                            <edge>Rising edge</edge>
                            <treshold>0.0</treshold>
                            <offset>50.0</offset>
                        </trigger>
                         <analog_signals>
                            <analog>
                                    <channel>0</channel>
                                    <name><![CDATA[IA_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>0</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>1</channel>
                                    <name><![CDATA[IB_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>1</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>2</channel>
                                    <name><![CDATA[IC_OUT_Paralelo]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>2</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>3</channel>
                                    <name><![CDATA[Grid_SubSystem.V_Grid_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>3</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>4</channel>
                                    <name><![CDATA[Grid_SubSystem.V_Grid_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>4</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>5</channel>
                                    <name><![CDATA[Grid_SubSystem.V_Grid_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>5</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>6</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>6</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>7</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>7</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>8</channel>
                                    <name><![CDATA[Grid_SubSystem.I_Grid_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>8</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>9</channel>
                                    <name><![CDATA[Gc_shunt_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>9</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>10</channel>
                                    <name><![CDATA[ref_I_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>10</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>11</channel>
                                    <name><![CDATA[Gc_shunt_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>12</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>12</channel>
                                    <name><![CDATA[ref_I_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>11</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>13</channel>
                                    <name><![CDATA[Gc_shunt_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>14</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>14</channel>
                                    <name><![CDATA[ref_I_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>13</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>15</channel>
                                    <name><![CDATA[VA_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>15</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>16</channel>
                                    <name><![CDATA[VB_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>16</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>17</channel>
                                    <name><![CDATA[VC_Out_Serie]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>17</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>18</channel>
                                    <name><![CDATA[Ic_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>18</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>19</channel>
                                    <name><![CDATA[ref_V_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>19</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>20</channel>
                                    <name><![CDATA[ref_V_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>20</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>21</channel>
                                    <name><![CDATA[ref_V_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>21</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>22</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>22</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>23</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>23</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>24</channel>
                                    <name><![CDATA[Load_SubSystem.V_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>24</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>25</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_A]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>25</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>26</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_B]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>26</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>27</channel>
                                    <name><![CDATA[Load_SubSystem.I_Load_C]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>27</row>
                                    <viewports>
                                   </viewports>
                               </analog>
                        </analog_signals>
                        <digital_signals>
                        </digital_signals>
                    </scope>
                    <plotting_options in_use="False">
                    
                        <subplots>
                            </subplots>
                    </plotting_options>
                </widget_settings>

            </component_data>
        <component_data>
                <id>5151a019a75111ef8696d45d64b809dd</id>
                <name><![CDATA[Enable Voltage Harmonics]]></name>
                <type>CheckBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue:
    # do something when checkbox is checked
    
    # list of harmonics
#              (harmonic_number, rms, phase)
# A
# list of harmonics
#              (harmonic_number, rms, phase)
#A
    harmonics = [
                 (3, 0.0964630, 0.0),
                 (5, 0.0964630, 0.0),
                 (7, 0.0964630, 0.0),
                 (9, 0.0964630, 0.0),
                 (11, 0.0636655, 0.0),
                 (13, 0.0636655, 0.0),
                 (15, 0.0318327, 0.0),
                 (2, 0.0, 0.0),
                 (2, 0.0, 0.0),
                 (2, 0.0, 0.0),
                 ]
    hil.set_source_sine_waveform('Grid_SubSystem.Va_Fundamental', rms=220.0, frequency=60.0, phase=0.0, harmonics_pu=harmonics)
#B
    harmonics = [
                 (3, 0.0964630, 240),
                 (5, 0.0964630, 240),
                 (7, 0.0964630, 240),
                 (9, 0.0964630, 240),
                 (11, 0.0636655, 240),
                 (13, 0.0636655, 240),
                 (15, 0.0318327, 240),
                 (2, 0.0, 0.0),
                 (2, 0.0, 0.0),
                 (2, 0.0, 0.0),
                 ]
    hil.set_source_sine_waveform('Grid_SubSystem.Vb_Fundamental', rms=220.0, frequency=60.0, phase=240, harmonics_pu=harmonics)
#B
    harmonics = [
                 (3, 0.0964630, 120),
                 (5, 0.0964630, 120),
                 (7, 0.0964630, 120),
                 (9, 0.0964630, 120),
                 (11, 0.0636655, 120),
                 (13, 0.0636655, 120),
                 (15, 0.0318327, 120),
                 (2, 0.0, 0.0),
                 (2, 0.0, 0.0),
                 (2, 0.0, 0.0),
                 ]
    hil.set_source_sine_waveform('Grid_SubSystem.Vc_Fundamental', rms=220.0, frequency=60.0, phase=120, harmonics_pu=harmonics)
    pass
else:
    # do something when checkbox is unchecked
    
    # A
    hil.set_source_sine_waveform('Grid_SubSystem.Va_Fundamental', rms=220.0, frequency=60.0, phase=0.0, harmonics_pu=())
    # B
    hil.set_source_sine_waveform('Grid_SubSystem.Vb_Fundamental', rms=220.0, frequency=60.0, phase=240, harmonics_pu=())
        # B
    hil.set_source_sine_waveform('Grid_SubSystem.Vc_Fundamental', rms=220.0, frequency=60.0, phase=120.0, harmonics_pu=())

    pass


]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[True]]></inputValue>
                <widget_settings>
                    <x>24</x>
                    <y>72</y>
                    <width>208</width>
                    <height>64</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>12537f48a75e11efac54d45d64b809dd</id>
                <name><![CDATA[THD Voltage Grid A]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_V_Grid_A')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>752</x>
                    <y>96</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>42df5a50a76611efae01d45d64b809dd</id>
                <name><![CDATA[THD Voltage Load A]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_V_Load_A')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>600</x>
                    <y>96</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>53d10be2a76611efbc7bd45d64b809dd</id>
                <name><![CDATA[THD Current Grid A]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_I_Grid_A')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>440</x>
                    <y>96</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>6cfc8814a76611efab7dd45d64b809dd</id>
                <name><![CDATA[THD Current Load A]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_I_Load_A')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>264</x>
                    <y>96</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>0754cb71a76811efac7dd45d64b809dd</id>
                <name><![CDATA[THD Voltage Grid B]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_V_Grid_B')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>752</x>
                    <y>168</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>12cf6c68a76811efb91ad45d64b809dd</id>
                <name><![CDATA[THD Voltage Load B]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_V_Load_B')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>600</x>
                    <y>168</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>1a75d0f0a76811ef8363d45d64b809dd</id>
                <name><![CDATA[THD Current Grid B]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_I_Grid_B')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>440</x>
                    <y>168</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>20f90622a76811efaac6d45d64b809dd</id>
                <name><![CDATA[THD Current Load B]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_I_Load_B')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>264</x>
                    <y>168</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>28f5420ca76811efab78d45d64b809dd</id>
                <name><![CDATA[THD Voltage Grid C]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_V_Grid_C')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>752</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>3586feaba76811efa65cd45d64b809dd</id>
                <name><![CDATA[THD Voltage Load C]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_V_Load_C')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>600</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>3f00ea71a76811efbf76d45d64b809dd</id>
                <name><![CDATA[THD Current Grid C]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value = hil.get_scada_output_value('thd_calculator.SC_THD_I_Grid_C')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>440</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>461103e1a76811ef9146d45d64b809dd</id>
                <name><![CDATA[THD Current Load C]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Specify Text Display options ('text' part is mandatory)
textDisplayData = {
    # label text
    "text": "",  # Inicializado vazio
    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# Mandatory variable used for storing value that will be displayed
displayValue = textDisplayData

# Fetch the THD value dynamically and assign it to the text
try:
    thd_value_C = hil.get_scada_output_value('thd_calculator.SC_THD_I_Load_C')  # Obtém o valor do SCADA output
    thd_value_porcento = thd_value_C*100
    textDisplayData ["text"] = f"{thd_value_porcento:.2f}%"  # Insere o valor no texto
except Exception as e:
    textDisplayData["text"] = "Erro ao obter THD"  # Mensagem de erro
    textDisplayData["text_color"] = "red"  # Cor do texto alterada em caso de erro
    print(f"Erro: {e}")  # Log do erro
]]></code>
                <updateRate>500</updateRate>
                <widget_settings>
                    <x>264</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>a5a25a5fa76911efa2d2d45d64b809dd</id>
                <name><![CDATA[Enable APF Serie]]></name>
                <type>CheckBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue:
    # do something when checkbox is checked
    hil.set_scada_input_value('Enable_Serie', 1)
    pass
else:
    # do something when checkbox is unchecked
    hil.set_scada_input_value('Enable_Serie', 0)
    pass

]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[True]]></inputValue>
                <widget_settings>
                    <x>24</x>
                    <y>184</y>
                    <width>208</width>
                    <height>64</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>d30302a1a76911ef8714d45d64b809dd</id>
                <name><![CDATA[Enable APF Shunt]]></name>
                <type>CheckBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue:
    # do something when checkbox is checked
    hil.set_scada_input_value('Enable_Shunt', 1.0)
    pass
    
else:
    # do something when checkbox is unchecked
    hil.set_scada_input_value('Enable_Shunt', 0.0)
    pass

]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[True]]></inputValue>
                <widget_settings>
                    <x>24</x>
                    <y>248</y>
                    <width>208</width>
                    <height>64</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>9daba8b8ab7f11ef8341d45d64b809dd</id>
                <name><![CDATA[Enable Current Harmonics]]></name>
                <type>CheckBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue:
    # do something when checkbox is checked
    
    # list of harmonics
    #(harmonic_number, rms, phase)
    # list of harmonics
#              (harmonic_number, rms, phase)
#A
    harmonics = [
             (3, 0.3215, 0.0),
             (5, 0.3215, 0.0),
             (7, 0.3215, 0.0),
             (9, 0.3215, 0.0),
             (11, 0.21219, 0.0),
             (13, 0.21219, 0.0), 
             (15, 0.10609, 0.0),
             (2, 0.0, 0.0),
             (2, 0.0, 0.0),
             (2, 0.0, 0.0),
             ]
    hil.set_source_sine_waveform('Load_SubSystem.I_source_A', rms=10.96, frequency=60.0, phase=0.0, harmonics_pu=harmonics)
    
#B
    harmonics = [
             (3, 0.3215, 240),
             (5, 0.3215, 240),
             (7, 0.3215, 240),
             (9, 0.3215, 240),
             (11, 0.21219, 240),
             (13, 0.21219, 240),
             (15, 0.10609, 240),
             (2, 0.0, 0.0),
             (2, 0.0, 0.0),
             (2, 0.0, 0.0),
             ]
    hil.set_source_sine_waveform('Load_SubSystem.I_source_B', rms=10.96, frequency=60.0, phase=240.0, harmonics_pu=harmonics)
    #C
    harmonics = [
             (3, 0.3215, 120),
             (5, 0.3215, 120),
             (7, 0.3215, 120),
             (9, 0.3215, 120),
             (11, 0.1607, 120),
             (13, 0.21219, 120),
             (15, 0.10609, 120),
             (2, 0.0, 0.0),
             (2, 0.0, 0.0),
             (2, 0.0, 0.0),
             ]
    hil.set_source_sine_waveform('Load_SubSystem.I_source_C', rms=10.96, frequency=60.0, phase=120.0, harmonics_pu=harmonics)
    pass
else:
    # do something when checkbox is unchecked
    
    # A
    hil.set_source_sine_waveform('Load_SubSystem.I_source_A', rms=10.96, frequency=60.0, phase=0.0, harmonics_pu=())
    # B
    hil.set_source_sine_waveform('Load_SubSystem.I_source_B', rms=10.96, frequency=60.0, phase=240, harmonics_pu=())
    # C
    hil.set_source_sine_waveform('Load_SubSystem.I_source_C', rms=10.96, frequency=60.0, phase=120, harmonics_pu=())

    pass

]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[True]]></inputValue>
                <widget_settings>
                    <x>24</x>
                    <y>128</y>
                    <width>208</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>5b819216b35911ef9fabd45d64b809dd</id>
                <name><![CDATA[Enable C block]]></name>
                <type>CheckBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue:
    # do something when checkbox is checked
    hil.set_scada_input_value('Enable_Serie1', 1)
    pass
else:
    # do something when checkbox is unchecked
    hil.set_scada_input_value('Enable_Serie1', 0)
    pass

]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[True]]></inputValue>
                <widget_settings>
                    <x>24</x>
                    <y>312</y>
                    <width>208</width>
                    <height>64</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>81de13afb82211efa608d45d64b809dd</id>
                <name><![CDATA[IOUT_SHUNT_A VS REF_I_A]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['ref_I_A', 'IA_OUT_Paralelo']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'ref_I_A': 1.0, 'IA_OUT_Paralelo': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>16</x>
                    <y>384</y>
                    <width>304</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>8a4871ebb82211efae2ed45d64b809dd</id>
                <name><![CDATA[IOUT_SHUNT_B VS REF_I_B]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['IB_OUT_Paralelo', 'ref_I_B']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'IB_OUT_Paralelo': 1.0, 'ref_I_B': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>312</x>
                    <y>384</y>
                    <width>304</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>90b4449ab82211efbe49d45d64b809dd</id>
                <name><![CDATA[IOUT_SHUNT_C VS REF_I_C]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['IC_OUT_Paralelo', 'ref_I_C']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'IC_OUT_Paralelo': 1.0, 'ref_I_C': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>608</x>
                    <y>384</y>
                    <width>304</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>92fa8a9fb82211ef859cd45d64b809dd</id>
                <name><![CDATA[IOUT_SERIE_A VS REF_V_A]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['VA_Out_Serie', 'ref_V_A']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'VA_Out_Serie': 1.0, 'ref_V_A': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>16</x>
                    <y>544</y>
                    <width>304</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>9569cbccb82211efa6e7d45d64b809dd</id>
                <name><![CDATA[IOUT_SERIE_B VS REF_V_B]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['VB_Out_Serie', 'ref_V_B']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'VB_Out_Serie': 1.0, 'ref_V_B': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>320</x>
                    <y>544</y>
                    <width>304</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99963511b82211efacded45d64b809dd</id>
                <name><![CDATA[IOUT_SERIE_C VS REF_V_c]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['VC_Out_Serie', 'ref_V_C']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'VC_Out_Serie': 1.0, 'ref_V_C': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>608</x>
                    <y>544</y>
                    <width>304</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>26e61df5b82711efb530d45d64b809dd</id>
                <name><![CDATA[CURRENT GRID]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['Grid_SubSystem.I_Grid_A', 'Grid_SubSystem.I_Grid_B', 'Grid_SubSystem.I_Grid_C']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'Grid_SubSystem.I_Grid_A': 1.0, 'Grid_SubSystem.I_Grid_B': 1.0, 'Grid_SubSystem.I_Grid_C': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>968</x>
                    <y>24</y>
                    <width>392</width>
                    <height>176</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3a53ec0db82711ef9361d45d64b809dd</id>
                <name><![CDATA[VOLTAGE LOAD]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['Load_SubSystem.V_Load_A', 'Load_SubSystem.V_Load_B', 'Load_SubSystem.V_Load_C']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'Load_SubSystem.V_Load_A': 1.0, 'Load_SubSystem.V_Load_B': 1.0, 'Load_SubSystem.V_Load_C': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>976</x>
                    <y>200</y>
                    <width>392</width>
                    <height>176</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        </components>
</ui_settings>